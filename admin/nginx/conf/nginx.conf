# Ууказываем параметры многопоточности
worker_processes 2;

# сохраняем ID "главного" процесса
pid logs/nginx.pid;

# журнал ошибок с ключевым словом в порядке возрастания серьезности: debug, info, notice, warn, error, crit, alert, emerg
error_log logs/ngx_errors.log warn;

events {
    worker_connections 1024;
}

http {
    # Задаёт таймаут, в течение которого keep-alive соединение с клиентом не будет закрыто со стороны сервера
    keepalive_timeout  75s;
	# Добавляет указанную кодировку в поле "Content-Type" заголовка ответа.
	charset utf-8;
	# Активирует копирование данных между файловыми дескрипторами средствами ядра 
	sendfile on;
	# Передавать заголовок ответа и начало файла в одном пакете
	tcp_nopush on;
	# Разрешаем серверу закрывать подключение тех клиентов, которые перестали отвечать
    reset_timedout_connection on;
	# Запрещает выдавать версию nginx в сообщениях об ошибках
    server_tokens off;
	# Задаёт соответствие расширений имён файлов MIME-типу ответов 
    include mime.types;
    # Задаёт MIME-тип ответов по умолчанию
    default_type application/octet-stream;
    # Задаем индексный файл по умолчанию
    index index.php index.html index.htm;
	# Если заданы необычно длинные имена server_name
	server_names_hash_bucket_size 64;
	
	server {
		# Определяем, в каком блоке server будет обрабатываться запрос
		server_name   ~^(www\.)?(?<domain>.+)$;
		# интерфейс и порт на котором висит сервер
		listen 127.0.0.1:80;
		# Таймаут при чтении тела запроса клиента
		client_body_timeout 300;
		# Таймаут при чтении заголовка запроса клиента
		client_header_timeout 120;
		# Таймаут, по истечению которого keep-alive соединение с клиентом не будет закрыто со стороны сервера
		keepalive_timeout 30 30;
		# Таймаут при передаче ответа клиенту
		send_timeout 300;
		# увеличиваем размер загружаемых данных
		client_max_body_size 100m;
        # Задаем расположение логов
	    access_log logs/access.$domain.log;
	    # Зададим путь (root) к сайту
		root ../public_html/$domain;

		# не отдавать файлы, начинающиеся с точки (.htaccess, .svn, .git и прочие)
		location ~/\. {
			deny all;
			#access_log off;
			#log_not_found off;
		}

		# ограничить доступ к некоторым папкам
		location ~^/(protected|framework|themes/\w+/views) {
			deny  all;
		}
		
		# обработчик для php файлов
		location ~ \.php$ {
		    #опускаемся на уровень вниз, т.к. php не поинимает - "cd ../"
			if ($document_root ~* ^(.+)nginx/\.\./(.+)$) {
                root $1$2;
            }
			#if ($query_string ~ "netbeans-xdebug") {
			#}
			#устанавливаем таймаут по больше для режима отладки
			fastcgi_read_timeout 4h;
			# Задаёт имя индексного файла для $fastcgi_script_name, если URI заканчивается слэшом
			fastcgi_index index.php;
			# Проверяем существование скрипта
			try_files $fastcgi_script_name =404;
			# указываем адрес сервера php5-fpm
			fastcgi_pass 127.0.0.1:9000;
			# перехватывать ошибки fastcgi и преобразовывает их в ошибки nginx
			fastcgi_intercept_errors on;
			# подключаем файл конфигурации для php5-fpm
			include fastcgi.conf;
		}
		
		# отключаем обработку запросов к статичным файлам
		location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
			try_files $uri =404;
		}

		# Включаем простой просмотр каталогов!
		location / {
			autoindex on;
		}
		
		# разрешаем получение статистики от сервера
		location /test {
			stub_status on;
			# отключаем запись в access-лог
			access_log off;
			# разрешить только для локального компа
			allow 127.0.0.1;
			deny all;
		}
    }
}
